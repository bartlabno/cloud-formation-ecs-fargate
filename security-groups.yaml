Description: >
  This template contains the security groups required by our entire stack.
  We create them in a seperate nested template, so they can be referenced
  by all of the other nested templates.

Parameters:
  EnvironmentName:
    Description: An environment name that will be prefixed to resource names
    Type: String

  VPC:
    Type: AWS::EC2::VPC::Id
    Description: Choose which VPC the security groups should be deployed to

  AllowedIp:
    Description: Allowed IP ranged to access Load Balancer Secuirty Group
    Type: String
    Defualt: 0.0.0.0/0
  
  PortExpose:
    Description: Port to be exposed
    Type: String
    Default: 80

Resources:
  # This security group defines that only AWS Load Balancer can access ECS directly
  FargateSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !Ref VPC
      GroupDescription: Access to the ECS Fargate from ELB only
      SecurityGroupIngress:
        - SourceSecurityGroupId: !Ref LoadBalancerSecurityGroup
          IpProtocol: -1
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-ELB-ECS

  # This security group defines who/where is allowed to access the Application Load Balancer.
  # By default, we've opened this up to the public internet (0.0.0.0/0) but can you restrict
  # it further if you want.
  LoadBalancerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !Ref VPC
      GroupDescription: Access to the load balancer that sits in front of ECS
      SecurityGroupIngress:
        - IpProtocol: tcp
          CidrIp: ${AllowedIp}
          IpProtocol: -1
          FromPort: ${PortExpose}
          ToPort: ${PortExpose}
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-LoadBalancers

Outputs:
  FargateSecurityGroup:
    Description: A reference to the security group for ELB to ECS
    Value: !Ref FargateSecurityGroup

  LoadBalancerSecurityGroup:
    Description: A reference to the security group for load balancers
    Value: !Ref LoadBalancerSecurityGroup
