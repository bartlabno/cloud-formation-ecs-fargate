---
- name: check default vpc if not defined
  command: aws ec2 describe-vpcs --region eu-west-2 --filters Name=isDefault,Values=true --output text --query Vpcs[].VpcId
  register: default_vpc
  when: use_vpc is not defined

- name: check default subnets if not defined
  shell: aws ec2 describe-subnets --region eu-west-2 --filters Name=default-for-az,Values=true Name=vpc-id,Values="{{ default_vpc.stdout }}" --output text --query Subnets[].SubnetId | tr "\\t" ", "
  register: subnets
  when: use_subnets is not defined

- name: set default vpc if not defined
  set_fact: use_vpc="{{ default_vpc.stdout }}"
  when: use_vpc is not defined

- name: set default subnet if not defined
  set_fact: use_subnets="{{ subnets.stdout }}"
  when: use_subnets is not defined

- name: ecs manager
  local_action:
    module: cloudformation
    aws_secret_key: "{{ lookup('env', 'AWS_SECRET_ACCESS_KEY') }}"
    aws_access_key: "{{ lookup('env', 'AWS_ACCESS_KEY_ID') }}"
    disable_rollback: true
    stack_name: "{{ project_name }}-{{ current_env }}-ecs-ansible-managed"
    state: "{{ state }}"
    region: "{{ project_region }}"
    template_body: "{{ lookup('template', 'ecs-fargate.yaml.j2') }}"
    template_parameters:
        ProjectName: "{{ project_name }}"
        EnvironmentName: "{{ current_env }}"
        VPC: "{{ use_vpc }}"
        Subnets: "{{ use_subnets }}"
        PortExpose: "{{ port_expose }}"
        AllowedIp: "{{ project_env[current_env].allowed_ip }}"
        ApplicationName: "{{ application_name }}"
        RootDomain: "{{ root_domain }}"
        BranchName: "{{ branch_name }}"
        BuildNumber: "{{ build_number }}"
    tags: 
        Stack: "{{ project_name }}-{{ current_env }}-ecs-ansible"
        Managed by: Managed by Ansible